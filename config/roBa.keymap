#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R                        &kp T                                                             &kp Y          &kp U  &lt 5 I    &kp O    &kp P
&kp A             &kp S         &kp D         &kp F                        &kp G        &kp ESC                   &kp MINUS                  &kp H          &kp J  &kp K      &kp L    &kp SQT
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                        &kp B        &kp TAB                   &kp UNDER                  &kp N          &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 6 INT_HENKAN  &lt 2 SPACE  &lt_to_layer_0 3 RET      &lt 1 LANG_ZENKAKUHANKAKU  &kp BACKSPACE                             &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&trans  &trans           &kp AMPERSAND  &kp ASTERISK  &kp TILDE                                &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DOUBLE_QUOTES  &kp SLASH             &trans
&trans  &trans           &kp DOLLAR     &kp PERCENT   &kp CARET     &trans      &kp SEMICOLON  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp SINGLE_QUOTE   &kp NON_US_BACKSLASH  &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN    &kp HASH      &kp QUESTION  &trans      &kp COLON      &kp LESS_THAN         &kp GREATER_THAN       &kp GRAVE          &trans                &trans
&trans  &trans           &trans         &trans        &trans        &trans      &trans         &trans                                                                                &trans
            >;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS                                           &trans      &kp F7  &kp F8  &kp F9  &kp F10
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &trans  &trans      &kp F4  &kp F5  &kp F6  &kp F11
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                    &trans  &kp ESCAPE  &kp F1  &kp F2  &kp F3  &kp F12
&trans                      &trans           &trans           &trans           &trans        &trans                       &trans  &trans                              &kp F13
            >;
        };

        ARROW {
            bindings = <
&kp LG(LEFT)    &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &kp LG(RIGHT)                      &kp LG(LEFT)  &kp LC(LS(TAB))   &kp UP_ARROW    &kp LC(TAB)        &kp LG(RIGHT)
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END        &trans      &trans  &kp HOME      &kp LEFT_ARROW    &kp DOWN_ARROW  &kp RIGHT_ARROW    &kp END
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans         &trans      &trans  &trans        &kp LC(LG(LEFT))  &trans          &kp LC(LG(RIGHT))  &trans
&trans          &kp LEFT_WIN            &kp PSCRN       &trans                   &trans         &trans      &trans  &trans                                                             &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans    &trans    &trans    &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans    &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans    &mkp MB1  &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &mkp MB3                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &kp LC(C)     &kp LC(V)      &trans  &kp LC(LA(TAB))  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp LA(LEFT)  &kp LA(RIGHT)  &trans  &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp LC(Z)     &kp LC(Y)      &trans  &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
